source files in ace_source/

different database schemas in yaceA/ yaceB/ etc.

scripts in yace*/bin/

schema documentation in yace*/postgresql_autodoc/

yaceB :
- normalized database with constraints, primary keys, foreign keys, serial IDs, junction tables.
- curator and timestamp columns for all tables.
- direction of data entered in acedb via XREF ignored.  hash data from both directions merged.
- all tables searchable to traverse to any related table.
cons :
- does not maintain the direction data is entered in acedb.  if objA-objB-hashA should be different from objB-objA-hashB, a new set of tables will need to be created to differentiate them.
- parser does not parse existing curators and timestamps into appropriate column, but could in the future.
- lots of tables, presumably slow retrieval.

yaceA :
- a direct mapping of acedb table-tags to postgres tables.
- no constraints, tables that map to the same ace object have the same 3-letter prefix in their name, and the same joinkey in the joinkey column.
- all data parsed to be ordered, order stored in order column.
- evidence hash treated as an object with other tables pointing to object key, each evidence tag is its own table.
- all data parsed to have an evidence in the evidence column, but no value is assigned unless some type of evidence exists.
- all tables have the same structure, keeping things simple.
- data is entered in both directions from acedb XREF, supporting objA-objB-hashA + objB-objA-hashB (different hash connections in different direction)
cons :
- no timestamp nor curator column.
- xref data entered twice in separate tables to account for different hashes in different direction.
- does not support searching evidence to get back to the object-tag that references it.
- order is not a standard attribute of ace objects, so wasted column for the most part.
- does not follow normalized database standards.
- lots of tables, presumably slow retrieval.


