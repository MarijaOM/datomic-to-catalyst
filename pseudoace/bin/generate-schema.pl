#!/usr/bin/perl

use strict;
use warnings;

use feature qw(say);

my $command_env = "cd ..; \
   java \
  -XX:+TieredCompilation \
  -classpath \
   /home/ec2-user/.m2/repository/org/clojure/clojure/1.7.0/clojure-1.7.0.jar \
  -Dclojure.compile.path=/home/ec2-user/git/db/pseudoace/target/classes \
  -Dlearn-a-language.version=0.1.0-SNAPSHOT \
  -Dfile.encoding=UTF-8 \
  -Dclojure.debug=false \
  clojure.main \
  -e ";

my $clojure_schema_generation_command = "
    (do \
        (try \
            ;; general java io package standard in clojure. 
            ;; This is the standard java io not the standard clojure io package, so explicitly imported
            (use 'clojure.java.io)
            ;; package of functions for dealing with acedb models.
            (use 'pseudoace.model)
            ;; the schema generator package
            (use 'pseudoace.model2schema)
          
            ;; read in annotated acedb models file generated by hand - PAD to create this
            (def models (parse-models (reader \"models/models.wrm.WS248.annot\")))
            ;; make the datomic schema from the acedb annotated models
            (def schema (models->schema models))));";
          

my $schema_generation_command = $command_env.$clojure_schema_generation_command;

say $schema_generation_command;
system($schema_generation_command);
